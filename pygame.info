


screen.blit()               - draw to screen
pygame.display.flip()       - push into video memory

pygame.draw.rect()

    draw a rectangle shape
    rect(Surface, color, Rect, width=0) -> Rect

    Draws a rectangular shape on the Surface. The given Rect is the area of the rectangle.
    The width argument is the thickness to draw the outer edge. If width is zero then the rectangle will be filled.

    Keep in mind the Surface.fill() method works just as well for drawing filled rectangles.
    In fact the Surface.fill() can be hardware accelerated on some platforms with both software and hardware display modes.

 fill()
    fill Surface with a solid color
    fill(color, rect=None, special_flags=0) -> Rect

    Fill the Surface with a solid color. If no rect argument is given the entire Surface will be filled.
    The rect argument will limit the fill to a specific area. The fill will also be contained by the Surface clip area.

    The color argument can be either a RGB sequence, a RGBA sequence or a mapped color index.
    If using RGBA, the Alpha (A part of RGBA) is ignored unless the surface uses per pixel alpha (Surface has the SRCALPHA flag).

    An optional special_flags is for passing in new in 1.8.0: BLEND_ADD, BLEND_SUB, BLEND_MULT, BLEND_MIN, BLEND_MAX
    new in 1.8.1: BLEND_RGBA_ADD, BLEND_RGBA_SUB, BLEND_RGBA_MULT, BLEND_RGBA_MIN, BLEND_RGBA_MAX BLEND_RGB_ADD, BLEND_RGB_SUB, BLEND_RGB_MULT, BLEND_RGB_MIN, BLEND_RGB_MAX With
    other special blitting flags perhaps added in the future.

    This will return the affected Surface area.